<Window x:Class="Components.PopupWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Components"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Background="#2D2D30"
        ResizeMode="NoResize"
        WindowStyle="None" ShowInTaskbar="False"
        WindowStartupLocation="Manual"
        KeyDown="Window_KeyDown"
        Topmost="True"
        Title="PopupWindow" Deactivated="Window_Deactivated" SizeToContent="Height" MaxHeight="400" Width="600">
    <Window.Resources>
        
        <!-- ScrollBar Thumb Style -->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBars -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#3F3F46" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NewButton" TargetType="Button">
            <Setter Property="Background" Value="Red"/>
            
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsPressed" Value="False" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Green" />
                </MultiTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Button.Background" Value="Purple" />
                    <Setter Property="Button.Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="Black" Direction="320" ShadowDepth="0" BlurRadius="0" Opacity="0" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid x:Name="_grid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>

        <Popup Name="_popUpMenu"
               Placement="Bottom"
               VerticalOffset="10"
               PlacementTarget="{Binding ElementName=_grid}"
               AllowsTransparency="True">
            <WrapPanel x:Name="_popUpPanel" Background="#3F3F46">
                <TextBlock FontSize="11" Foreground="WhiteSmoke" Padding="7" x:Name="_popUpText"
                            TextAlignment="Center" 
                           Text="The data has been updated"/>
                <!--<Button Margin="5" Content="Undo"/>-->
            </WrapPanel>
        </Popup>

        <ScrollViewer ScrollViewer.HorizontalScrollBarVisibility="Auto"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      Loaded="ScrollViewer_Loaded"
                      x:Name="_scrollViewer"
                      MaxHeight="350" Margin="5" Grid.Row="0">
            <TextBox Margin="3" AcceptsReturn="True" CaretBrush="WhiteSmoke" IsReadOnly="True" BorderThickness="0" Background="Transparent" x:Name="_tbText" Foreground="#DCDCAA" Padding="2"/>
        </ScrollViewer>
        <StackPanel Margin="5" Grid.Row="1">
            <Border BorderBrush="#3F3F46" BorderThickness="0.5"  />
            <DockPanel Margin="0 5 0 0">
                <TextBlock DockPanel.Dock="Left" FontSize="11"  Margin="5 0 0 0" Foreground="Gray" FontStyle="Italic" Text="Added: "/>
                <TextBlock  DockPanel.Dock="Left" x:Name="_tbDateTime" FontSize="11" Foreground="Gray" FontStyle="Italic" Text="{Binding DateTime}"/>
                <Button Margin="5 0 0 0" ToolTip="Close (Escape)" DockPanel.Dock="Right" BorderThickness="0" Background="Transparent" HorizontalAlignment="Right" Click="CloseButton_Clicked">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="Border" >
                                <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#3F3F46" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#3F3F46" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#3F3F46" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#3F3F46" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    <materialDesign:PackIcon HorizontalAlignment="Right" Foreground="WhiteSmoke" Kind="Close" Padding="8 4 8 4"/>
                </Button>
                <ToggleButton x:Name="_toggleEditButton" ToolTip="Toggle Edit Mode (Ctrl + E)" Click="EditButton_Clicked" BorderThickness="0" Background="Transparent" DockPanel.Dock="Right" HorizontalAlignment="Right" Width="20">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="Border" >
                                <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#3F3F46" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#3F3F46" />
                                </Trigger>
                                <!--<Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#3F3F46" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#3F3F46" />
                                </Trigger>-->
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#3F3F46"/>
                                </Trigger>
                                
                            </ControlTemplate.Triggers>
                            </ControlTemplate>
                    </ToggleButton.Template>
                    <!--<ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Background" Value="Green"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" Value="Red"/>
                                </Trigger>
                            </Style.Triggers>

                        </Style>
                    </ToggleButton.Style>-->
                    <materialDesign:PackIcon HorizontalAlignment="Right" Foreground="WhiteSmoke" Kind="Edit" Padding="8 4 8 4"/>
                </ToggleButton>
            </DockPanel>
        </StackPanel>
    </Grid>
</Window>
